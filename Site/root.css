@font-face {
  font-family: 'Bebas Neue', 'Roboto Condensed';
  src: url('BebasNeue-Regular.ttf');
  src: url('RobotoCondensed-Regular.ttf');
  font-display: swap;
}

html,
body {
  font-size: 14pt;
  height: 100%;
  line-height: 1.8;
  background-color: #282C34;
  color: white;
  font-family: 'Roboto Condensed', sans-serif;
}

footer {
  height: 3%;
  background-color: #202124;
  text-align: center;
  font-size: small;
}

/* This css is solely for the banner and its nav banner*/
/* Set the font size of the h1 element to be responsive using viewport units */
h1 {
  font-size: 10em;
  font-family: 'Bebas Neue', cursive;
}

h2 {
  font-size: 24pt;
  font-family: 'Bebas Neue', cursive;
  color: gold;
  text-decoration: underline;
  text-underline-offset: 10px;
}

h3 {
  font-family: 'Bebas Neue', cursive;
  color: gold;
}

#wrapper {
  margin-left: auto;
  margin-right: auto;
}

/* Set the width and height of elements with the IDs 'code', 'about', and 'contact' to be responsive using percentages and viewport height units*/
#code,
#about,
#contact {
  width: 33.33%;
  height: 15vh;
  border: 1vh;
}

/* Set the height of elements with the class 'banner' to be responsive using viewport height units, and add a background image, center it, and add text alignment and scrolling if necessary */
.banner {
  width: 100%;
  height: 40vh;
  background-image: url(assets/banner.jpg);
  background-size: cover;
  text-align: center;
  overflow-y: auto;
}

/* Set the background image of elements with the class 'hero-image', position and center it to be responsive */
.hero-image {
  background-image: url("assets/banner.jpg");
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  background-attachment: fixed;
}

/* Set the text alignment and position of elements with the class 'bannertext' to be centered and slightly offset from the top */
.bannertext {
  text-align: center;
  position: absolute;
  top: 5%;
  left: 50%;
  height: 300px;
  transform: translate(-50%, -50%);
  color: white;
}

/* Set the font size and font family of elements with the class 'container' to be responsive using viewport units */
.containerBanner {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  font-size: 5vw;
  font-family: 'Bebas Neue', cursive;
  color: white;
  border-collapse: collapse;
}

/* Set the flex properties, height, background color, and text alignment of elements with the class 'square' to be responsive, and add padding, box sizing, and a cursor pointer */
.square {
  flex: 1 0 auto;
  height: 100%;
  background-color: #202124;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 2vw;
  box-sizing: border-box;
  cursor: pointer;
}

/* this css is here to shape and work containers for the body*/
/* shapes the first container in the body*/
.containerText {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin: 0 20% 0 20%;
  height: auto;
}

.containerText2 {
  margin: 0 20% 0 20%;
  height: auto;
}

.containerText3 {
  margin: 10vh 20% 0 20%;
  height: auto;
  text-align: center;
  line-height: 1;
}

.containerText4 {
  margin: 10vh 20% 0 20%;
  height: auto;
  text-align: center;
  line-height: 1;
}

#blockLeft {
  width: 50%;
  height: auto;
  float: left;
}

#blockRight {
  width: 50%;
  height: auto;
  float: right;
}

#languagesTitle {
  text-align: center;
}

#headalign {
  text-align: center;
}

#skills1 {
  width: 33.33%;
  height: auto;
  float: inline-start;
}

#skills2 {
  width: 33.33%;
  height: auto;
  display: inline-block;
}

#skills3 {
  width: 33.33%;
  height: auto;
  float: inline-end;
}

#introimage {
  width: 400px;
  height: 400px;
  border-radius: 50%;
  float: right;
  margin-right: 50px;
  margin-top: 125px;
}

#github {
  width: 200px;
  height: 200px;
  margin: 10% 0 20% 100%;
  float: inline-start;
}

#linkedin {
  width: 200px;
  height: 200px;
  margin: 10% 100% 20% 0;
  float: inline-end;
}

/* This code defines the styling for a slideshow container that displays images */
/* Set the maximum width of the container to 800 pixels and position it relative to its parent element */
.slideshow-container {
  max-width: 800px;
  position: relative;
  margin: 0 auto;
}

/* Style the images within the container */
.slideshow-container img {
  display: none;
  /* Hide all images by default */
  max-width: 100%;
  /* Set the maximum width of the images to 100% of the container */
  height: auto;
  /* Automatically adjust the height of the images */
  margin: 0 auto;
  /* Center the images horizontally within the container */
}

/* Display the first image in the slideshow */
.slideshow-container img:first-child {
  display: block;
}

/* Style the previous and next buttons for navigating through the slideshow */
.prev,
.next {
  position: absolute;
  /* Position the buttons absolutely within the container */
  top: 50%;
  /* Vertically center the buttons */
  transform: translateY(-50%);
  /* Adjust the buttons to be centered properly */
  font-size: 30px;
  /* Set the font size of the buttons */
  font-weight: bold;
  /* Make the buttons bold */
  padding: 10vh;
  /* Add padding to the buttons */
  cursor: pointer;
  /* Change the cursor to a pointer on hover */
  color: gold;
  /* Set the color of the buttons to gold */
  user-select: none;
  /* this removes the highlight double click */
  -moz-user-select: none;
  /* this removes it for firefox */
  -webkit-user-select: none;
  /* this removes it for chromium */
  -ms-user-select: none;
  /* this removes it for ms browsers */
}

/* Position the next button to the right side of the container */
.next {
  right: 0;
}

/* Style the dot container for displaying the pagination dots */
.dot-container {
  text-align: center;
  /* Center the dot container */
  margin-top: 10px;
  /* Add some margin to the top of the dot container */
}

/* Style the pagination dots */
.dot {
  display: inline-block;
  /* Display the dots inline */
  width: 10px;
  /* Set the width of the dots */
  height: 10px;
  /* Set the height of the dots */
  border-radius: 50%;
  /* Make the dots circular */
  background-color: gray;
  /* Set the background color of the dots */
  margin: 0 5px;
  /* Add some margin between the dots */
  cursor: pointer;
  /* Change the cursor to a pointer on hover */
}

/* Style the active pagination dot */
.active-dot {
  background-color: gold;
  /* Set the background color of the active dot to gold */
}